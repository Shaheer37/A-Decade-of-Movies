apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply from: 'configs.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.shaheer.adecadeofmovies"
        minSdkVersion 21
        targetSdkVersion 30
        multiDexEnabled true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    def props = project.ext
    buildTypes {
        debug{
            buildConfigField 'String', props.FLICKR_API_KEY_NAME, props.FLICKR_API_KEY
            buildConfigField 'String', props.FLICKR_API_BASE_URL_NAME, props.FLICKR_API_BASE_URL
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions{
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def multidexVersion = "2.0.1"
    def lifecycleVersion = "2.2.0"
    def roomVersion = "2.2.6"
    def timberVersion = "4.7.1"
    def daggerVersion = "2.27"
    def rxJavaVersion = '2.2.19'
    def rxAndroidVersion = '2.1.1'
    def okHttpVersion = "4.8.1"
    def retrofitVersion = "2.9.0"
    def gsonVersion = "2.8.6"
    def glideVersion = "4.11.0"
    def chipLayoutManagerVersion = "0.3.7@aar"
    def coroutineTestVersion = "1.2.1"
    def androidXTestCoreVersion = "1.3.0"
    def androidXTestExtKotlinRunnerVersion = "1.1.2"
    def archTestingVersion = "2.1.0"
    def robolectricVersion = "4.3.1"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    //multidex
    implementation "androidx.multidex:multidex:$multidexVersion"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // room: database
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // rx java and rx android
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    //gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    //glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    //timber
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "com.beloo.widget:ChipsLayoutManager:$chipLayoutManagerVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.test:core:$androidXTestCoreVersion"
    testImplementation "androidx.test:runner:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineTestVersion"

    testImplementation "org.robolectric:robolectric:$robolectricVersion"
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}